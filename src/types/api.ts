import { type JsonFragment } from '@ethersproject/abi'
import { type ContractInterface } from '../api/contract'
import { type EventsInterface } from '../api/events'
import { type ProviderInterface } from '../api/provider'
import { type WalletInterface } from '../api/wallet'

/**
 * Defines the API interface, which specifies the various properties and methods available for managing the api.
 * @interface
 */
export interface API {
  /**
   * The current status of the API.
   * @type {string}
   */
  status: string

  /**
   * An interface providing wallet functionality for managing wallet on ethcode extenion via api.
   * @type {WalletInterface}
   */
  wallet: WalletInterface

  /**
   * An interface providing contract functionality for managing contract on ethcode extenion via api.
   * @type {ContractInterface}
   */
  contract: ContractInterface

  /**
   * An interface providing provider functionality for managing provider on ethcode extenion via api.
   * @type {ProviderInterface}
   */
  provider: ProviderInterface

  /**
   * An interface providing event functionality for managing event on ethcode extenion via api.
   * @type {EventsInterface}
   */
  events: EventsInterface
}

/**
 * Defines the contract abi export type generated by the ethcode extension.
 * @interface
 * @property {string} name The name of the contract.
 * @property {readonly JsonFragment[] | undefined} abi The abi of the contract.
 */
export interface ContractABI {
  name: string
  abi: readonly JsonFragment[] | undefined
}
