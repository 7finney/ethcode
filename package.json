{
  "name": "ethcode",
  "displayName": "ETHcode",
  "description": "Ethereum IDE for VS Code",
  "version": "0.2.9",
  "publisher": "ethential",
  "categories": [
    "Debuggers",
    "Programming Languages"
  ],
  "keywords": [
    "solidity",
    "ethereum",
    "eth2.0",
    "remix ide"
  ],
  "icon": "images/ethcode_tsp.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/ethential/ethcode"
  },
  "engines": {
    "vscode": "^1.48.0",
    "node": ">=8.16.0"
  },
  "activationEvents": [
    "onCommand:ethcode.activate",
    "onCommand:ethcode.compiled-json.load",
    "onCommand:ethcode.compiled-json.load.all",
    "onCommand:ethcode.compiled-json.select",
    "onCommand:ethcode.network.select"
  ],
  "main": "./build/ext-src/extension.js",
  "extensionDependencies": [
    "ibm.output-colorizer"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "ÎžTHcode",
      "properties": {
        "ethcode.networks": {
          "scope": "application",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "markdownDescription": "List of networks settings including ethereum, polygon etc",
          "default": {
            "Ethereum Mainnet": "homestead",
            "Rinkeby Testnet": "rinkeby",
            "Ropsten Testnet": "ropsten",
            "Kovan Testnet": "kovan",
            "Goerli Testnet": "goerli"
          }
        },
        "ethcode.selectedNetwork": {
          "type": "string",
          "scope": "application",
          "markdownDescription": "Display Selected Network Name",
          "default": "Ethereum Mainnet"
        },
        "ethcode.grpc.serviceEndpoints": {
          "type": "object",
          "default": {
            "client-call": "cc.ethcode.dev:50053",
            "remix-tests": "rt.ethco.de:50051",
            "remix-debug": "rd.ethco.de:50052"
          },
          "description": "List of links to connect to ethcode backend.",
          "scope": "application"
        }
      }
    },
    "commands": [
      {
        "command": "ethcode.activate",
        "title": "Activate extension",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.account.create",
        "title": "Create ethereum account",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.account.delete",
        "title": "Delete ethereum account",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.account.sign-deploy",
        "title": "Sign & Deploy ethereum transaction",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.account.select",
        "title": "Select ethereum account",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.account.balance",
        "title": "Get account balance",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.account.list",
        "title": "List ethereum accounts from keystore",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.account.ganache.list",
        "title": "List ganache testnet accounts",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.network.select",
        "title": "Select ethereum network",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.transaction.set",
        "title": "Set ethereum transaction",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.transaction.build",
        "title": "Build Ethereum raw transaction",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.transaction.gas.get",
        "title": "Get gas estimate for transaction",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.transaction.gas.set",
        "title": "Set gas estimate for transaction",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.transaction.get",
        "title": "Get transaction info",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.transaction.receipt.get",
        "title": "Get transaction receipt",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.compiled-json.load",
        "title": "Ethcode: Load compiled JSON output"
      },
      {
        "command": "ethcode.compiled-json.load.all",
        "title": "Load all compiled JSON output",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.compiled-json.select",
        "title": "Select one compiled JSON output",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.contract.input.create",
        "title": "Create constructor input JSON",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.contract.input.load",
        "title": "Ethcode: Load constructor inputs from JSON"
      },
      {
        "command": "ethcode.contract.call.input.create",
        "title": "Create function input JSON",
        "category": "Ethcode"
      },
      {
        "command": "ethcode.contract.call",
        "title": "Ethcode: Contract call"
      },
      {
        "command": "ethcode.show",
        "title": "Open Ethcode Interface",
        "category": "Ethcode"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+alt+e",
        "command": "ethcode.activate"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == json",
          "command": "ethcode.compiled-json.load",
          "group": "Ethcode"
        },
        {
          "when": "resourceLangId == json",
          "command": "ethcode.contract.input.load",
          "group": "Ethcode"
        },
        {
          "when": "resourceLangId == json",
          "command": "ethcode.contract.call",
          "group": "Ethcode"
        }
      ],
      "commandPalette": [
        {
          "when": "false",
          "command": "ethcode.compiled-json.load",
          "group": "Ethcode"
        }
      ]
    }
  },
  "dependencies": {
    "@babel/core": "7.4.3",
    "@grpc/grpc-js": "^1.1.8",
    "@grpc/proto-loader": "^0.5.2",
    "@svgr/webpack": "4.1.0",
    "@types/randombytes": "^2.0.0",
    "@types/underscore": "^1.9.4",
    "@types/uuid": "^3.4.6",
    "axios": "^0.21.2",
    "babel-eslint": "10.0.1",
    "babel-jest": "^24.8.0",
    "babel-loader": "8.0.5",
    "babel-plugin-named-asset-import": "^0.3.2",
    "babel-preset-react-app": "^9.0.0",
    "camelcase": "^5.2.0",
    "case-sensitive-paths-webpack-plugin": "2.2.0",
    "dotenv": "6.2.0",
    "dotenv-expand": "4.2.0",
    "eslint-loader": "^4.0.2",
    "ethereumjs-tx": "^2.1.2",
    "ethers": "^5.6.9",
    "file-loader": "3.0.1",
    "fs": "^0.0.1-security",
    "fs-extra": "^9.0.1",
    "html-webpack-plugin": "4.0.0-beta.5",
    "identity-obj-proxy": "3.0.0",
    "is-wsl": "^1.1.0",
    "jest": "24.7.1",
    "jest-environment-jsdom-fourteen": "0.1.0",
    "jest-resolve": "24.7.1",
    "jest-watch-typeahead": "0.3.0",
    "keythereum": "^1.2.0",
    "number-to-bn": "^1.7.0",
    "optimize-css-assets-webpack-plugin": "5.0.1",
    "pnp-webpack-plugin": "1.2.1",
    "remix-url-resolver": "^0.0.12",
    "resolve": "1.10.0",
    "semver": "6.0.0",
    "shelljs": "^0.8.5",
    "terser-webpack-plugin": "1.2.3",
    "ts-node": "^10.8.1",
    "ts-pnp": "1.1.2",
    "ts-protoc-gen": "^0.15.0",
    "typescript": "^4.0.5",
    "underscore": "^1.12.1",
    "url-loader": "1.1.2",
    "utf8": "^3.0.0",
    "uuid": "^3.4.0",
    "web3-core-helpers": "^1.2.6",
    "webpack": "4.29.6",
    "webpack-dev-server": "3.2.1",
    "webpack-manifest-plugin": "2.0.4",
    "workbox-webpack-plugin": "4.2.0"
  },
  "devDependencies": {
    "@types/jest": "24.0.13",
    "@types/node": "^12.0.2",
    "@typescript-eslint/eslint-plugin": "^4.7.0",
    "@typescript-eslint/parser": "^4.7.0",
    "copy-webpack-plugin": "^5.0.4",
    "eslint": "^7.13.0",
    "eslint-config-airbnb": "^18.2.0",
    "eslint-config-airbnb-typescript": "^10.0.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-loader": "^4.0.2",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-jest": "^24.0.2",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-react": "^7.21.2",
    "eslint-plugin-react-hooks": "^4.1.2",
    "pre-commit": "^1.2.2",
    "prettier": "^2.1.2",
    "vscode": "^1.1.37"
  },
  "scripts": {
    "vscode:prepublish": "yarn build",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "build": "tsc -p tsconfig.extension.json",
    "watch": "tsc -watch -p ./"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*.d.ts"
    ],
    "setupFilesAfterEnv": [],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}",
      "<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}"
    ],
    "testEnvironment": "jest-environment-jsdom-fourteen",
    "transform": {
      "^.+\\.(js|jsx|ts|tsx)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|ts|tsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx|ts|tsx)$",
      "^.+\\.module\\.(css|sass|scss)$"
    ],
    "modulePaths": [
      "./src"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web",
      "^.+\\.module\\.(css|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "web.js",
      "js",
      "web.ts",
      "ts",
      "web.tsx",
      "tsx",
      "json",
      "web.jsx",
      "jsx",
      "node"
    ],
    "watchPlugins": [
      "jest-watch-typeahead/filename",
      "jest-watch-typeahead/testname"
    ]
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "author": {
    "name": "0mkara",
    "email": "0mkar@protonmail.com"
  },
  "contributors": [
    {
      "name": "Ayan Banerjee",
      "email": "ayanb1999@gmail.com"
    },
    {
      "name": "Soumyanil Jana",
      "email": "soumyaniljana@gmail.com"
    }
  ],
  "pre-commit": []
}
